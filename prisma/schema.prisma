// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  M
  F
  Other
}

enum MpesaTransactionType {
  PAY_BILL
  TILL_NUMBER
}
model User {
  first_name   String
  last_name    String
  phone        String    @unique
  password     String
  salt         String
  avatar       String?
  email        String?   @unique
  address      String?
  gender       Gender?
  dateCreated  DateTime
  updatedAt    DateTime?
  sessionToken String?
  id           String    @id @default(uuid())
  OTP UserOTP?

  @@map("users")
}
model UserOTP {
  id      String  @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String   @unique
  phone String @unique
  code    String

  @@map("user_otps")
}



model Rider{
  first_name String
  last_name String
  phone String @unique
  password String
  salt String
  avatar String?
  email String? @unique
  address String?
  gender Gender? 
  sessionToken String?
  dateCreated  DateTime
  updatedAt    DateTime?
  id           String    @id @default(uuid())

  @@map("riders")
}

model CustomerCareAgent {
  first_name   String
  last_name    String
  email        String                  @unique
  password     String
  salt         String
  created_at   DateTime                @default(now())
  updated_at   DateTime?
  is_active    Boolean                 @default(false)
  verified     Boolean                 @default(false)
  token        CustomerCareAgentToken?
  reset_token CustomerCareAgentResetToken?
  sessionToken String?
  id           String                  @id @default(uuid())

  @@map("customer_care_agent")
}

model CustomerCareAgentToken {
  user   CustomerCareAgent @relation(fields: [userId], references: [id], onDelete: Cascade)
  token  String
  userId String            @unique
  id     String            @id @default(uuid())

  @@map("customer_care_agent_token")
}

model MpesaPayBillPayments {
  transaction_type MpesaTransactionType
  trans_id         String               @unique
  trans_time       DateTime
  trans_amount     Decimal              @db.Money
  bill_ref_number  String?
  sender_msisdn    String
  sender_name      String?
  org_account_balance Decimal              @db.Money
}

model CustomerCareAgentResetToken {
  user   CustomerCareAgent @relation(fields: [userId], references: [id], onDelete: Cascade)
  token  String
  userId String            @unique
  id     String            @id @default(uuid())

  @@map("customer_care_agent_reset_token")
}